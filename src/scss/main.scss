@import "breakpoints";
@import "colors";
@import "fonts";
@import "resets";

:root {
	--default-inline-spacing: 1.2rem;
	--default-card-inline-padding: 1rem;
	--transition-speed-normal: 500ms;
}

body {
	font-family: var(--ff-primary);
	font-size: var(--fs-400);
}

.container {
	// width: 90%;
	// max-width: 1200px;
	// margin-inline: auto;
}

.btn {
	border: none;
	outline: none;
	padding: 0.65em 1.25em;
	border-radius: 0.35em;
	cursor: pointer;

	&--previous {
		background-color: transparent;
	}
}

.banner__container {
	& img {
		position: absolute;
		z-index: -1;

		width: 100%;
		object-fit: cover;
	}
}

.multi-step-form {
	margin-block-start: 0em;
}

.form-group {
	display: flex;
	flex-direction: column;
	gap: 0.5em;
	margin-block-end: 1em;

	& label {
		font-weight: 400;
	}

	& input {
		font-weight: 500;
		padding: 0.75em 1em;
		outline: none;
		border: 1px solid var(--clr-gray-light-400);
		border-radius: 0.5em;

		&::placeholder {
			font-weight: 500;
		}

		&:focus {
			border: 1px solid var(--clr-input-border-focused);
		}
	}

	&.flex {
		display: flex;
		flex-direction: row;
		gap: 1em;
		border: 1px solid var(--clr-gray-light-400);
		border-radius: 0.5em;
		padding: 1em;

		&.active {
			border: 1px solid var(--clr-input-border-focused);
		}

		& > * {
			// border: 1px solid red;
		}
	}

	&__radio__img {
		// width: 100%;

		& img {
			width: 50px;
		}
	}
	&__radio__text {
		width: 100%;

		& label {
			font-weight: 500;
		}
	}

	&__checkbox__text {
		width: 100%;

		& label {
			font-weight: 500;
		}
	}

	&-label__desc {
		font-size: var(--fs-200);

		display: flex;
		align-items: center;

		&--withcolor {
			color: var(--clr-input-border-focused);
		}
	}

	&-label__yearly {
		font-weight: 400;
		font-size: var(--fs-100);

		&[data-show="true"] {
			opacity: 1;
			pointer-events: auto;
			max-height: 100px;
			transition: opacity var(--transition-speed-normal) 200ms linear,
				max-height var(--transition-speed-normal) linear;
		}

		/*if label does not have attrubute data-show="true", hide it */
		&:not([data-show="true"]) {
			opacity: 0;
			pointer-events: none;
			max-height: 0;
			transition: opacity var(--transition-speed-normal) linear,
				max-height var(--transition-speed-normal) linear;
		}
	}

	& input[type="radio"] {
		// display: none;
	}
}

.checkbox-container {
	--checkbox-size: 20px;

	display: flex;
	align-items: center;
	gap: 1em;
	width: 100%;
	position: relative;

	//This is the original checkbox
	//We need to hide this hideous checkbox haha
	input[type="checkbox"] {
		cursor: pointer;
		opacity: 0;
		position: absolute;
		left: 0;
		margin: 0;
		z-index: 9;
		width: var(--checkbox-size);
		height: var(--checkbox-size);
	}

	.custom-checkbox-container {
		display: flex;
		align-items: center;
	}

	//This is the custom checkbox.
	.custom-checkbox {
		cursor: pointer;
		width: var(--checkbox-size);
		height: var(--checkbox-size);
		border: 1px solid var(--clr-gray-light-400);
		border-radius: 0.2em;
		overflow: hidden;

		&-check {
			cursor: pointer;
			display: block;
			max-width: 100%;
			opacity: 0;
			height: 100%;

			transition: opacity var(--transition-speed-normal) ease,
				background-color var(--transition-speed-normal) ease;
		}
	}

	// Go to input "checkbox" if checked > select the direct sibling custom-checkbox > then select the direct child custom-checkbox-check
	input[type="checkbox"]:checked + .custom-checkbox > .custom-checkbox-check {
		opacity: 1;
		background-color: var(--clr-input-border-focused);
	}

	label {
		cursor: pointer;
	}

	//This is added to have a hover effect on labels inside this custom checkbox only
	.form-group__checkbox__text {
		transition: opacity var(--transition-speed-normal) ease;
	}

	.form-group__checkbox__text:hover {
		opacity: 0.75;
	}
}

.card-container {
	display: flex;
	flex-direction: column;

	&:not(:nth-of-type(3)) {
		// display: none;
		// background-color: red;
	}

	& .lower-action {
		margin-block-start: 5em;
		// margin-top: auto;
		background-color: white;
		display: flex;
		justify-content: flex-end;

		padding: 1em var(--default-inline-spacing);

		&__two-column {
			display: flex;
			justify-content: space-between;
			align-items: center;
			width: 100%;
		}
	}
}

.card {
	background-color: white;
	margin-inline: var(--default-inline-spacing);
	padding-inline: var(--default-card-inline-padding);
	border-radius: 0.75em;
	padding: 2em;

	&__title {
		color: var(--clr-primary-title);
		margin-block-end: 0.5em;
	}

	&__desc {
		margin-block-end: 1em;
		line-height: 1.6;
	}
}

.plans {
	display: flex;
	justify-content: center;
	align-items: center;
	gap: 1em;
	border-radius: 0.5em;

	padding: 1em 0;

	& p {
		font-size: var(--fs-200);
		font-weight: 500;
	}
}

//label
.switch {
	position: relative;
	display: inline-block;
	width: 50px;
	height: 25px;

	& input {
		display: none;
	}

	.slider {
		position: absolute;
		cursor: pointer;
		inset: 0;
		border-radius: 34px;
		transition: background-color var(--transition-speed-normal) ease;

		&::before {
			--size-of-circle: 16px;

			position: absolute;
			content: "";
			height: var(--size-of-circle);
			width: var(--size-of-circle);

			//When setting the left and bottom
			// Compute the square root of the
			//--size-of-circle

			left: 4px;
			bottom: 4px;

			background-color: white;
			border-radius: 50%;
			transform: translateX(0);
			transition: transform var(--transition-speed-normal) ease;
		}
	}

	input:checked + .slider {
		// background-color: #ff278c;
	}

	input:checked + .slider:before {
		// transform: translateX(95%);
		transform: translateX(25px);
	}
}

.page-indicator {
	padding-block: 1.8em;

	&__list {
		display: flex;
		justify-content: center;
		align-items: center;
		gap: 1em;

		list-style: none;
		margin: 0;
		padding: 0;
	}

	&__item {
		border: 1px solid white;
		border-radius: 50%;
		width: 40px;
		height: 40px;
		aspect-ratio: 1 / 1;
		color: white;

		&.active {
			background-color: var(--clr-indicator-bg);
			color: var(--clr-primary-title) !important;
		}

		& p {
			font-size: var(--fs-200);
			font-weight: 500;
			height: 100%;

			display: flex;
			justify-content: center;
			align-items: center;
		}
	}
}
