{"mappings":"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","sources":["src/js/app.js"],"sourcesContent":["// **********************************************************\n//Variables\nconst form = document.querySelector('[multiStepForm]');\nconst formSteps = [...form.querySelectorAll('[data-step]')];\nconst pageIndicatorItems = [\n\t...document.querySelectorAll('.page-indicator .page-indicator__item'),\n];\n\nconst yearlySwitch = document.querySelector('#yearly');\nconst yearlyLabels = document.querySelectorAll('.form-group-label__yearly');\n\nlet finalPlan = document.querySelector('#final-plan');\nlet finalBasePlan = document.querySelector('#final-base-plan');\nlet basePlanFrequency = document.querySelectorAll('.base-plan--frequency');\nlet finalFrequencyTitle = document.querySelector('#final-frequency-title');\n\n// Ito yung div ng mga card plans, dito nakalagay yung mga maliliit na card plans\nconst radioPlanContainer = document.querySelector('[data-plan-container]');\n// radioPlanContainer.style.border = '1px solid red';\n\n// Ito yung mga radioButtons sa bawat isang card plan\nconst radioButtons = [...document.querySelectorAll('[data-plan-input]')];\n\n// Ito yung container ng maliliit na card. ito yung form group\nconst planOptionsDiv = [...document.querySelectorAll('[data-plan-options]')];\n\nconst submitButton = document.querySelector('#submitButton');\n\n// Ito yung price ng base plan, naka array\nlet prices = [...document.querySelectorAll('.baseplan-price')];\n// **********************************************************\n\n// For switching the steps\n// Note 1\nlet currentIndicator = pageIndicatorItems.findIndex((el) => {\n\treturn el.classList.contains('active');\n});\n\nlet currentStep = formSteps.findIndex((el) => {\n\treturn el.classList.contains('active');\n});\n// Note 2\n\n// Ito yung pang default lang kung wlang naka set sa markup na active step\n// lalagay nya sa 0 yung current step at lalagyan nya ng active class\nif (currentStep < 0 && currentIndicator < 0) {\n\tcurrentStep = 0;\n\tcurrentIndicator = 0;\n\tpageIndicatorItems[currentIndicator].classList.add('active');\n\tformSteps[currentStep].classList.add('active');\n}\n\nform.addEventListener('click', (e) => {\n\t// Note 3\n\tlet incrementor;\n\tif (e.target.matches('[data-next]')) {\n\t\tincrementor = 1;\n\t} else if (e.target.matches('[data-previous]')) {\n\t\tincrementor = -1;\n\t} else {\n\t\treturn;\n\t}\n\t// Pag hindi yung button ang pinindot mo, mag eexit lang sya\n\n\tconst inputs = [...formSteps[currentStep].querySelectorAll('input')];\n\tconst isAllValid = inputs.every((input) => {\n\t\treturn input.reportValidity();\n\t});\n\n\tif (isAllValid) {\n\t\tcurrentStep += incrementor;\n\t\tcurrentIndicator += incrementor;\n\n\t\tformSteps.forEach((el, index) => {\n\t\t\tel.classList.toggle('active', index === currentStep);\n\t\t});\n\n\t\tpageIndicatorItems.forEach((el, index) => {\n\t\t\tel.classList.toggle('active', index === currentIndicator);\n\t\t});\n\n\t\t//Note 4\n\t}\n});\n\n// **********************************************************\n\n// For adding yearly or monthly labels in step 2\n// This is to set the checkbox to always false after the page loads\nyearlySwitch.checked = false;\n\nif (yearlySwitch) {\n\tyearlySwitch.addEventListener('click', (e) => {\n\t\tyearlyLabels.forEach((el) => {\n\t\t\tel.dataset.show = e.target.checked;\n\t\t\t//for each label or element, set data atrribute 'show' with the value (true/false) of the switch input\n\t\t});\n\t});\n} else {\n\treturn;\n}\n\nlet yearlyPrices = prices.map((el) => {\n\treturn parseInt(el.textContent) * 10;\n});\n\nlet monthlyPrices = prices.map((el) => {\n\treturn parseInt(el.textContent) * 1;\n});\n\nyearlySwitch.addEventListener('change', (e) => {\n\tif (e.target.checked === true) {\n\t\tfinalFrequencyTitle.textContent = 'Yearly';\n\t\tbasePlanFrequency.forEach((el) => {\n\t\t\tel.textContent = 'yr';\n\t\t});\n\n\t\tprices.forEach((el, index) => {\n\t\t\tel.textContent = yearlyPrices[index];\n\t\t});\n\n\t\tlet activeInputIndex = radioButtons.findIndex((el) => {\n\t\t\treturn el.checked;\n\t\t});\n\n\t\tlet selectedPlan = parseInt(prices[activeInputIndex].textContent);\n\t\tfinalBasePlan.textContent = selectedPlan;\n\t} else {\n\t\tfinalFrequencyTitle.textContent = 'Monthly';\n\t\tbasePlanFrequency.forEach((el) => {\n\t\t\tel.textContent = 'mo';\n\t\t});\n\t\tprices.forEach((el, index) => {\n\t\t\tel.textContent = monthlyPrices[index];\n\t\t});\n\n\t\tlet activeInputIndex = radioButtons.findIndex((el) => {\n\t\t\treturn el.checked;\n\t\t});\n\n\t\tlet selectedPlan = parseInt(prices[activeInputIndex].textContent);\n\t\tfinalBasePlan.textContent = selectedPlan;\n\t}\n});\n\n// **********************************************************\n\n// For adding border in the selected plan and\n// For updating the number of prices\n// let activePlan = planOptionsDiv.findIndex((el) => {\n// \treturn el.classList.contains('active');\n// \t// Hahanapin nya yung card na may active class\n// \t// Pero dahil wala akong sinet sa markup na active doon by default\n// \t// -1 ang result neto\n// });\n\n// // So pag -1 ang result gawin mong zero 0. Tapos lagyan mo active para\n// // May border\n// if (activePlan < 0) {\n// \tactivePlan = 0;\n// \tplanOptionsDiv[activePlan].classList.add('active');\n// }\n\n// console.log(planOptionsDiv);\n\nradioPlanContainer.addEventListener('click', (e) => {\n\t// Add ng event listener sa Div ng mga card plans, at pag na click mo yung\n\t// may attribute na data-plan-input gawin mo yung nasa loob\n\tif (e.target.matches('[data-plan-input]')) {\n\t\tlet activeInputIndex = radioButtons.findIndex((el) => {\n\t\t\treturn el.checked;\n\t\t\t// I return mo yung index ng radiobutton na naka check\n\t\t});\n\n\t\tlet activeInput = radioButtons.find((el) => {\n\t\t\treturn el.checked;\n\t\t\t// I return mo yung element mismo na radiobutton na naka check\n\t\t});\n\n\t\tplanOptionsDiv.forEach((el, index) => {\n\t\t\tel.classList.toggle('active', index === activeInputIndex);\n\t\t});\n\n\t\tlet selectedPlan = parseInt(prices[activeInputIndex].textContent);\n\n\t\tfinalBasePlan.textContent = selectedPlan;\n\t\tfinalPlan.textContent = activeInput.labels[0].textContent;\n\t}\n});\n\nform.addEventListener('keydown', (e) => {\n\tif (e.code === 'Enter' || e.code === 'NumpadEnter') {\n\t\te.preventDefault();\n\t}\n});\n\n// **********************************************************\n\n// Notes:\n// 1. The findIndex() method returns the index of the first element in an array that satisfies the provided testing function. If no elements satisfy the testing function, -1 is returned.\n// findIndex ay array prototype, meaning sa array lang sya magagamit.\n// Kaya yung formSteps kinonvert ko sa array tapos naka spread, para ang paglabas nya ay\n// [sample,sample,sample]\n\n// 2. Ilalabas nya yung index ng div na may class na active\n\n// 3. // console.log(e.target);\n// itong element.matches dapat ang itetest mo dyan kung may CSS selector ba na nakalagay dun na magmamatch sa sinabi mo\n// The matches() method of the Element interface tests whether the element would be selected by the specified CSS selector.\n// sa ginawa ko, hinanap ko yung may attribute na ganyan\n// same lang din sya sa document.querySelector()\n// Single or double quote muna, then yung CSS Selector mo\n\n// 4. toggle the active class if the index is equal to currentStep.\n// if the index is equal to currentstep, it returns true.\n// and it will toggle the active class for not in the current step\n\n// Basically parang nag evaluate ka lang ng condition\n// halimbawa 1 > 2 => False yan\n// Parang ganun din dun sa 2nd parameter\n// yung index ba ay equal to currentPage? true ba? kung true make sure na naka toggle ang active\n\n// **********************************************************\n// Sample lang ito ng findIndex\n// 1. Ito yung array kung saan sya mag checheck\n// const nums = [1, 2323, 7, 12, 100, 88, 99, 23, 16, 13, 14, 10, 23, 22];\n\n// // 2. Ito yung findIndex sinave lang sa variable na firstEvenNum\n// // yung findIndex method ay mag rurun for each element dun sa array\n// // hanggang mahanap nya yung first match dun sa condition sa loob ng ginawa mong fn\n// const firstEvenNum = nums.findIndex((num) => {\n// \treturn num % 2 === 0;\n// \t// Ito yung condition\n// });\n\n// // 3. Ilalabas natin yung result\n// console.log(firstEvenNum);\n// **********************************************************\n"],"names":["form","document","querySelector","formSteps","querySelectorAll","pageIndicatorItems","yearlySwitch","yearlyLabels","finalPlan","finalBasePlan","basePlanFrequency","finalFrequencyTitle","radioPlanContainer","radioButtons","planOptionsDiv","prices","currentIndicator","findIndex","el","classList","contains","currentStep","add","addEventListener","e","incrementor","target","matches","every","input","reportValidity","forEach","index","toggle","checked","dataset","show","yearlyPrices","map","parseInt","textContent","monthlyPrices","activeInputIndex","selectedPlan","activeInputIndex1","selectedPlan1","activeInput","find","labels","code","preventDefault"],"version":3,"file":"index.de7df23e.js.map"}