{"mappings":"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","sources":["src/js/app.js"],"sourcesContent":["// **********************************************************\n//Variables\nconst form = document.querySelector('[multiStepForm]');\nconst formSteps = [...form.querySelectorAll('[data-step]')];\nconst pageIndicatorItems = [...document.querySelectorAll('.page-indicator .page-indicator__item')]; //<<-- <li> to ng Page indicator\nconst yearlySwitch = document.querySelector('#yearly');\nconst yearlyLabels = document.querySelectorAll('.form-group-label__yearly');\nlet finalBasePlanStep4 = document.querySelector('#finalBasePlanStep4');\nlet finalBasePlanFrequencyTitleStep4 = document.querySelector('#finalBasePlanFrequencyTitleStep4');\nlet finalBasePlanPriceStep4 = document.querySelector('#finalBasePlanPriceStep4');\nlet planFrequencies = document.querySelectorAll('.plan-frequency');\nconst planCardsContainerStep2 = document.querySelector('[data-plan-cards-container-step2]'); //<-- Ito yung div ng mga card plans sa step 2, dito nakalagay yung mga maliliit na card plans\n// planCardsContainerStep2.style.border = '1px solid red';\n\n// Ito yung mga radioButtons sa bawat isang card plan\nconst radioButtonsHiddenStep2 = [...document.querySelectorAll('[data-plan-card-input-step2]')];\n\n// Ito yung mismong container ng maliliit na plan card. ito yung form group\nconst planCardDivsStep2 = [...document.querySelectorAll('[data-individual-plan-card-div-step2]')];\n\n// Ito yung parang UL natin. Ito yung pinag lalagayan ng addons sa step4\nconst finalAddonsDivStep4 = document.querySelector('#finalAddonsDivStep4');\n\n// Ito yung price ng mga plan, naka array\nlet prices = [...document.querySelectorAll('.plan-price')];\nconst checkboxesStep3 = [...document.querySelectorAll('[data-addon-card-input-step3]')];\nconst addonsCardDivsStep3 = [...document.querySelectorAll('[data-individual-addon-card-div-step3]')];\nconst submitButton = document.querySelector('#submitButton');\n\n// **********************************************************\n// Para kahit mapindot ang enter hindi mag susubmit ang form\n// Sa loob lang ito ng form\nform.addEventListener('keydown', (e) => {\n\tif (e.code === 'Enter' || e.code === 'NumpadEnter') {\n\t\te.preventDefault();\n\t\tconsole.log('Enter is prevented');\n\t}\n});\n\nlet plansObj = [\n\t{\n\t\tplan: undefined,\n\t\tfrequency: undefined,\n\t\tprice: undefined,\n\t\taddons: [],\n\t},\n];\n// **********************************************************\n// For switching the steps\n// Note 1\nlet currentIndicator = pageIndicatorItems.findIndex((el) => {\n\treturn el.classList.contains('active');\n});\n\nlet currentStep = formSteps.findIndex((el) => {\n\treturn el.classList.contains('active');\n});\n// Note 2\n\n// Ito yung pang default lang kung wlang naka set sa markup na active step\n// lalagay nya sa 0 yung current step at lalagyan nya ng active class\n// Ganun din sa indicator\nif (currentStep < 0 && currentIndicator < 0) {\n\tcurrentStep = 0;\n\tcurrentIndicator = 0;\n\tpageIndicatorItems[currentIndicator].classList.add('active');\n\tformSteps[currentStep].classList.add('active');\n}\n\nconst nextFn = (e) => {\n\t// Note 3\n\tlet incrementor;\n\tif (e.target.matches('[data-next]')) {\n\t\tincrementor = 1;\n\t} else if (e.target.matches('[data-previous]')) {\n\t\tincrementor = -1;\n\t} else {\n\t\treturn;\n\t}\n\t// Pag hindi yung button ang pinindot mo, mag eexit lang sya\n\n\t// Kunin mo lahat ng input sa forms step na current step halimbawa\n\t// formstep[0] tapos kunin mo lahat ng inputs tapos every input\n\t// check mo at ireport mo ang validity pag, true na, procede sa incrementor\n\tconst currentFormStepInputs = [...formSteps[currentStep].querySelectorAll('input')];\n\tconst isAllValid = currentFormStepInputs.every((input) => {\n\t\t// Basically lahat ng inputs sa current form step, kunin mo at every\n\t\t// input check mo kung valid na ba, if hindi, report ang error\n\t\t// ang report validity nagrereturn ng true or false, dahil naka 'every' tayo\n\t\t// meaning dapat lahat ng input ay valid, else false ang irereturn nya\n\t\treturn input.reportValidity();\n\t});\n\n\tif (isAllValid) {\n\t\tcurrentStep += incrementor;\n\t\tcurrentIndicator += incrementor;\n\n\t\tformSteps.forEach((el, index) => {\n\t\t\tel.classList.toggle('active', index === currentStep);\n\t\t});\n\n\t\tpageIndicatorItems.forEach((el, index) => {\n\t\t\tel.classList.toggle('active', index === currentIndicator);\n\t\t});\n\n\t\t//Note 4\n\t}\n};\n\nform.addEventListener('click', nextFn);\n\n// **********************************************************\n\n// For adding yearly or monthly labels in step 2\n// This is to set the checkbox to always false after the page loads\nyearlySwitch.checked = false;\n\nif (yearlySwitch) {\n\tyearlySwitch.addEventListener('click', (e) => {\n\t\tyearlyLabels.forEach((el) => {\n\t\t\tel.dataset.show = e.target.checked;\n\t\t\t//for each label or element, set data atrribute 'show' with the value (true/false) of the switch input\n\t\t});\n\t});\n} else {\n\treturn;\n}\n\nlet yearlyPrices = prices.map((el) => {\n\treturn parseInt(el.textContent) * 10;\n});\n\nlet monthlyPrices = prices.map((el) => {\n\treturn parseInt(el.textContent) * 1;\n});\n\nyearlySwitch.addEventListener('change', (e) => {\n\tif (e.target.checked === true) {\n\t\tfinalBasePlanFrequencyTitleStep4.textContent = 'Yearly';\n\t\tplanFrequencies.forEach((el) => {\n\t\t\tel.textContent = 'yr';\n\t\t});\n\n\t\t// Update mo yung kada isa ng prices into yearly prices\n\t\tprices.forEach((el, index) => {\n\t\t\tel.textContent = yearlyPrices[index];\n\t\t});\n\n\t\tlet activeRadioStep2 = radioButtonsHiddenStep2.find((el) => {\n\t\t\treturn el.checked;\n\t\t\t// Index rereturn neto yung mismong element\n\t\t});\n\n\t\tlet activeRadioIndexStep2 = radioButtonsHiddenStep2.findIndex((el) => {\n\t\t\treturn el.checked;\n\t\t\t// Index rereturn neto 0 - 2 or kung ilan man ang dulo\n\t\t});\n\n\t\tlet selectedPlan = parseInt(prices[activeRadioIndexStep2].textContent);\n\t\tfinalBasePlanPriceStep4.textContent = selectedPlan;\n\n\t\t// Updating plansObj\n\t\tplansObj[0].plan = activeRadioStep2.labels[0].textContent;\n\t\tplansObj[0].frequency = activeRadioStep2.labels[2].textContent;\n\t\tplansObj[0].price = selectedPlan;\n\n\t\t// Ito yung pag may laman na yung addons tapos na click ulit yung yearly switch\n\t\t// Dahil naka true ang yearly, meaning dapat times 10 ang addons\n\t\t// Pero gagawin mo lang yun pag may laman na yung addons array,\n\t\t// Mangyayari lang yun pag yung user ganito ginawa, step2 > step3> tapos bumalik ng step 2 ulit tapos pinalitan yung yearlyswitch\n\t\tif (plansObj[0].addons.length !== 0) {\n\t\t\t// May laman\n\t\t\tlet newPrices = plansObj[0].addons.map((el) => {\n\t\t\t\t// Yearly ito\n\t\t\t\t// Gawa ng bagong array na naka times 10\n\t\t\t\treturn el.price * 10;\n\t\t\t});\n\n\t\t\tplansObj[0].addons.forEach((el, index) => {\n\t\t\t\t// Dun sa addons array kunin mo ang each element at index nun\n\t\t\t\t// set mo yung price sa newPrices pero yung index ng addons element ang gamitin mo para tugma\n\t\t\t\tel.price = newPrices[index];\n\t\t\t});\n\t\t}\n\n\t\tconsole.log(plansObj);\n\t} else {\n\t\tfinalBasePlanFrequencyTitleStep4.textContent = 'Monthly';\n\t\tplanFrequencies.forEach((el) => {\n\t\t\tel.textContent = 'mo';\n\t\t});\n\t\tprices.forEach((el, index) => {\n\t\t\tel.textContent = monthlyPrices[index];\n\t\t});\n\n\t\tlet activeRadioStep2 = radioButtonsHiddenStep2.find((el) => {\n\t\t\treturn el.checked;\n\t\t\t// Index rereturn neto yung mismong element\n\t\t});\n\n\t\tlet activeRadioIndexStep2 = radioButtonsHiddenStep2.findIndex((el) => {\n\t\t\treturn el.checked;\n\t\t});\n\n\t\tlet selectedPlan = parseInt(prices[activeRadioIndexStep2].textContent);\n\t\tfinalBasePlanPriceStep4.textContent = selectedPlan;\n\n\t\t// Updating plansObj\n\t\tplansObj[0].plan = activeRadioStep2.labels[0].textContent;\n\t\tplansObj[0].frequency = activeRadioStep2.labels[2].textContent;\n\t\tplansObj[0].price = selectedPlan;\n\n\t\t// Ito yung pag may laman na yung addons tapos na click ulit yung yearly switch\n\t\t// Dahil naka false ang yearly, meaning dapat divide 10 ang addons\n\t\t// Pero gagawin mo lang yun pag may laman na yung addons array,\n\t\t// Mangyayari lang yun pag yung user ganito ginawa, step2 > step3> tapos bumalik ng step 2 ulit tapos pinalitan yung yearlyswitch\n\t\t// didivide mo lang yung prices KUNG nag click na sya ng yearly atleast ONCE\n\t\t// kasi pag hindi nya ginalaw yun, by default monthly lang ang prices\n\n\t\tif (plansObj[0].addons.length !== 0) {\n\t\t\t// May laman\n\t\t\tlet newPrices = plansObj[0].addons.map((el) => {\n\t\t\t\t// Monthly ito\n\t\t\t\t// Gawa ng bagong array na naka divide 10\n\t\t\t\t// Kasi na multiply by 10 na natin to kung na click nya at least once ang yearly, pag hindi nya na click yun\n\t\t\t\t// ng at least once, hindi na mangyayari to kasi monthly naman ang original na prices\n\t\t\t\treturn el.price / 10;\n\t\t\t});\n\n\t\t\tplansObj[0].addons.forEach((el, index) => {\n\t\t\t\t// Dun sa addons array kunin mo ang each element at index nun\n\t\t\t\t// set mo yung price sa newPrices pero yung index ng addons element ang gamitin mo para tugma\n\t\t\t\tel.price = newPrices[index];\n\t\t\t});\n\t\t}\n\n\t\tconsole.log(plansObj);\n\t}\n});\n\n// **********************************************************\n// Ito yung sa step 2 para kada click or tap ng user sa plan nag a update ang frequency at plans\nplanCardsContainerStep2.addEventListener('click', (e) => {\n\t// Add ng event listener sa Div ng mga card plans, at pag na click mo yung\n\t// may attribute na data-plan-card-input-step2 gawin mo yung nasa loob\n\tif (e.target.matches('[data-plan-card-input-step2]')) {\n\t\tlet activeRadioStep2 = radioButtonsHiddenStep2.find((el) => {\n\t\t\treturn el.checked;\n\t\t\t// I return mo yung element mismo na radiobutton na naka check\n\t\t});\n\n\t\tlet activeRadioIndexStep2 = radioButtonsHiddenStep2.findIndex((el) => {\n\t\t\treturn el.checked;\n\t\t\t// I return mo yung index ng radiobutton na naka check\n\t\t});\n\n\t\tplanCardDivsStep2.forEach((el, index) => {\n\t\t\tel.classList.toggle('active', index === activeRadioIndexStep2);\n\t\t});\n\n\t\tlet selectedPlan = parseInt(prices[activeRadioIndexStep2].textContent);\n\n\t\tfinalBasePlanPriceStep4.textContent = selectedPlan;\n\t\t// Para to sa final step. yung final plan\n\t\tfinalBasePlanStep4.textContent = activeRadioStep2.labels[0].textContent;\n\n\t\t// Updating the plansObj\n\t\tplansObj[0].plan = activeRadioStep2.labels[0].textContent;\n\t\tplansObj[0].frequency = activeRadioStep2.labels[2].textContent;\n\t\tplansObj[0].price = selectedPlan;\n\t\tconsole.log(plansObj);\n\t}\n});\n\n// **********************************************************\n// Step 3\n// Blank array muna dito natin lalagay yung mga plans at prices\nlet listArray = [];\n\nconst addToDOM = (arr) => {\n\tfinalAddonsDivStep4.innerHTML = '';\n\n\tarr.forEach((item, index) => {\n\t\t// Gawa ng bagong DIV\n\t\t// const priceHtml = `+$<span class=\"plan-price\">${item.price}</span>/<span class=\"plan-frequency\">mo</span>`;\n\t\tconst priceHtml = `+$<span class=\"plan-price\">${plansObj[0].addons[index].price}</span>/<span class=\"plan-frequency\">${plansObj[0].frequency}</span>`;\n\t\tconst newDiv = document.createElement('DIV');\n\t\tnewDiv.classList.add('form-group__summary--addons');\n\n\t\t// Gawa ng bagong P para sa addon title\n\t\tconst newParagraphTitle = document.createElement('p');\n\t\tnewParagraphTitle.classList.add('form-group__summary--addons--title');\n\t\tnewParagraphTitle.innerText = item.addon;\n\n\t\tconst newParagraphPrice = document.createElement('p');\n\t\tnewParagraphPrice.classList.add('form-group__summary--addons--price');\n\t\tnewParagraphPrice.innerText = plansObj[0].addons[index].price;\n\t\t// newParagraphPrice.innerHTML = priceHtml;\n\n\t\tnewDiv.append(newParagraphTitle);\n\t\tnewDiv.append(newParagraphPrice);\n\t\tfinalAddonsDivStep4.append(newDiv);\n\t});\n};\n\ncheckboxesStep3.forEach((el) => {\n\tel.addEventListener('click', (e) => {\n\t\tif (e.target.checked) {\n\t\t\tlistArray.push({\n\t\t\t\taddon: e.target.labels[0].innerText,\n\t\t\t\tprice: parseInt(e.target.labels[1].innerText),\n\t\t\t});\n\n\t\t\tplansObj[0].addons.push({\n\t\t\t\taddon: e.target.labels[0].innerText,\n\t\t\t\tprice: parseInt(e.target.labels[1].innerText),\n\t\t\t});\n\n\t\t\tconsole.log(plansObj);\n\n\t\t\taddToDOM(listArray);\n\t\t} else {\n\t\t\tlistArray = listArray.filter((el) => {\n\t\t\t\treturn el.addon !== e.target.labels[0].innerText;\n\t\t\t});\n\n\t\t\tplansObj[0].addons = plansObj[0].addons.filter((el) => {\n\t\t\t\treturn el.addon !== e.target.labels[0].innerText;\n\t\t\t});\n\t\t\tconsole.log(plansObj);\n\t\t\taddToDOM(listArray);\n\t\t}\n\t});\n});\n\n// **********************************************************\n\n// Notes:\n// 1. The findIndex() method returns the index of the first element in an array that satisfies the provided testing function. If no elements satisfy the testing function, -1 is returned.\n// findIndex ay array prototype, meaning sa array lang sya magagamit.\n// Kaya yung formSteps kinonvert ko sa array tapos naka spread, para ang paglabas nya ay\n// [sample,sample,sample]\n\n// 2. Ilalabas nya yung index ng div na may class na active\n\n// 3. // console.log(e.target);\n// itong element.matches dapat ang itetest mo dyan kung may CSS selector ba na nakalagay dun na magmamatch sa sinabi mo\n// The matches() method of the Element interface tests whether the element would be selected by the specified CSS selector.\n// sa ginawa ko, hinanap ko yung may attribute na ganyan\n// same lang din sya sa document.querySelector()\n// Single or double quote muna, then yung CSS Selector mo\n\n// 4. toggle the active class if the index is equal to currentStep.\n// if the index is equal to currentstep, it returns true.\n// and it will toggle the active class for not in the current step\n\n// Basically parang nag evaluate ka lang ng condition\n// halimbawa 1 > 2 => False yan\n// Parang ganun din dun sa 2nd parameter\n// yung index ba ay equal to currentPage? true ba? kung true make sure na naka toggle ang active\n\n// **********************************************************\n// Sample lang ito ng findIndex\n// 1. Ito yung array kung saan sya mag checheck\n// const nums = [1, 2323, 7, 12, 100, 88, 99, 23, 16, 13, 14, 10, 23, 22];\n\n// // 2. Ito yung findIndex sinave lang sa variable na firstEvenNum\n// // yung findIndex method ay mag rurun for each element dun sa array\n// // hanggang mahanap nya yung first match dun sa condition sa loob ng ginawa mong fn\n// const firstEvenNum = nums.findIndex((num) => {\n// \treturn num % 2 === 0;\n// \t// Ito yung condition\n// });\n\n// // 3. Ilalabas natin yung result\n// console.log(firstEvenNum);\n// **********************************************************\n"],"names":["form","document","querySelector","formSteps","querySelectorAll","pageIndicatorItems","yearlySwitch","yearlyLabels","finalBasePlanStep4","finalBasePlanFrequencyTitleStep4","finalBasePlanPriceStep4","planFrequencies","planCardsContainerStep2","radioButtonsHiddenStep2","planCardDivsStep2","finalAddonsDivStep4","prices","checkboxesStep3","addEventListener","e","code","preventDefault","console","log","plansObj","plan","undefined","frequency","price","addons","currentIndicator","findIndex","el","classList","contains","currentStep","add","incrementor","target","matches","every","input","reportValidity","forEach","index","toggle","checked","dataset","show","yearlyPrices","map","parseInt","textContent","monthlyPrices","activeRadioStep2","find","activeRadioIndexStep2","selectedPlan","labels","length","newPrices","activeRadioStep21","activeRadioIndexStep21","selectedPlan1","newPrices1","listArray","addToDOM","arr","innerHTML","item","newDiv","createElement","newParagraphTitle","innerText","addon","newParagraphPrice","append","push","filter"],"version":3,"file":"index.77bc03dd.js.map"}